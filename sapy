#!/usr/bin/env python
#
#   File : sapy
#   Author : stefano prina 
#
# MIT License
# 
# Copyright (c) 2017 Stefano Prina <stethewwolf@gmail.com>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without sestriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.
# 
#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

from sapy_lib.datamgr import DataMgr
from sapy_lib.gui import GuiCtr
import pathlib, json, os


class Sapy(object):
    def __init__(self):
        self.__app_folder = ""
        self.__configuration_file = ""
        self.__configuration = {}

        # gater user home folder
        home = os.environ['HOME']

        # check if user app folder exist
        self.__app_folder = pathlib.Path(home + "/.sapy/")
        if not self.__app_folder.is_dir(): 
            self.__app_folder.mkdir()

        default_configuration = {
            'debug' : False,
            'data_folder' : home + '/.sapy/data',
            'json_data' : home + '/.sapy/data/data.json'
        }

        # check if app configuration file is present
        self.__configuration_file = pathlib.Path(home + '/.sapy/config.json')
        if not self.__configuration_file.is_file():
            with open(home + '/.sapy/config.json', 'w') as configuration_file:
                configuration_file.write(unicode(json.dumps(default_configuration, indent=True)))
                configuration_file.close()

        # load configuration file
        if self.__configuration_file.is_file(): 
            with self.__configuration_file.open() as configuration_file:
                self.__configuration = json.load(configuration_file)
        
        # check if data folder is present
        if not os.path.isdir(self.__configuration['data_folder']): 
            os.makedirs(self.__configuration['data_folder'])

        # check if json data file is present
        if not os.path.isfile(self.__configuration['json_data']):
            with open(self.__configuration['json_data'], 'w') as json_file:
                json_file.write(unicode(json.dumps([], indent=True)))


        self.__data = DataMgr(pathlib.Path(self.__configuration['json_data']))
        self.__gui = GuiCtr(self.__data)
        self.__icli = None
        self.__cli = None

    def run_cli(self):
        pass

    def run_icli(self):
        pass

    def run_gui(self):
        self.__gui.run()
        pass


if __name__ == "__main__":
    sapy = Sapy()
    sapy.run_gui()
