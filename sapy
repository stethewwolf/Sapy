#!/usr/bin/env python
#
#   File : sapy.py
#
# MIT License
# 
# Copyright (c) 2017 Stefano Prina <stethewwolf@gmail.com>
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
#     The above copyright notice and this permission notice shall be included in all
#     copies or substantial portions of the Software.
# 
#     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
#     SOFTWARE.

import logging,os,json
from sapy_lib.arg_parser import Master

_DATAFILE_ ="sample_data/data.json"
_DEBUG_ = True
_VERSION_ = 0.0
_DESCRIPTION_ = """
Simple program to manage and analize money movement 
"""
_NAME_ = "sapy"

def load_saved_data (  ) :
    if _DEBUG_ :
        print ("__ sapy __: load_saved_data : \n" + os.path.abspath( _DATAFILE_ ))

    if os.path.isfile( os.path.abspath( _DATAFILE_ ) ) :
        datafile = open( os.path.abspath( _DATAFILE_ ), "r")
        data = json.load( datafile )
        datafile.close()
        return data
    elif _DEBUG_ :
        print (" no file " +  os.path.abspath(_DATAFILE_))

    else :
        logging.error( "no file %s available", _DATAFILE_ )
    pass

def save_data ( data ) :
    if _DEBUG_ :
        print ("__ sapy __: save_data : " + json.dumps(data, ensure_ascii=True ) )

    datafile = open( os.path.abspath( _DATAFILE_ ) , "w+")
    json.dump( data, datafile )
    datafile.close()
    pass


def main ( ):
    if _DEBUG_ :
        print ("__ main __ ")

    data = load_saved_data ( )

    master = Master( _NAME_, _VERSION_, _DESCRIPTION_, data )
    
    master.parse()

    master.run()
    
    save_data( master.data )

    return

if _DEBUG_ :
    print "__ sapy __ "
    
main()

